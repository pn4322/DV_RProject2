c(1,1,2,3,4,3,5) %>% cumsum()
diamonds %>% mutate(cumsum_x = cumsum(x)) %>% tbl_df
c(1,1,2,3,4,3,5) %>% cumprod()
c(1,1,2,3,4,3,5) %>% between(2,4)
diamonds %>% mutate(between_x = between(x,4,4.1)) %>% tbl_df
c(1:5) %>% cummean()
c(1:5) %>% lead()
c(1:5) %>% lead() - c(1:5)
diamonds %>% mutate(lead_z = lead(z)-z) %>% tbl_df
c(1:5) %>% lag()
c(1:5) %>% lag() - c(1:5)
diamonds %>% mutate(lag_z = z-lag(z)) %>% tbl_df
c(1:10)
c(1:10) %>% ntile(4) # bucket edges are rounded
diamonds %>% mutate(ntile_z = ntile(z,100)) %>% arrange(desc(ntile_z)) %>% tbl_df
diamonds %>% mutate(ntile_z = ntile(z,100)) %>% group_by(ntile_z) %>% summarise(n=n()) %>% tbl_df
c(1,1,2,5,4,3,5) %>% cume_dist()
c(1:5) %>% cume_dist()
c(1,1:5) %>% cume_dist()
# c(TRUE, TRUE, FALSE, FALSE, TRUE) %>% cumall()
# c(FALSE, TRUE, FALSE, FALSE, TRUE) %>% cumany()
# Now let's try them in the mutate function
diamonds %>% mutate(price_percent = cume_dist(price)) %>% arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
# select d.*, cume_dist() OVER (order by price) cume_dist from diamonds d order by 11 desc;
# select d.*, cume_dist() OVER (PARTITION BY cut order by price) cume_dist from (select * from diamonds where rownum < 100) d order by cut desc, 11 desc;
# Can also try rank(), last_value, nth_value
bottom20_diamonds <- diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20) %>% arrange(desc(price_percent)) %>% tbl_df
diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent >= .80) %>% arrange(desc(price_percent)) %>% tbl_df
top20_diamonds <- diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent >= .80) %>% arrange(desc(price_percent)) %>% tbl_df
diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20 | price_percent >= .80) %>% ggplot(aes(x = price, y = carat, color = cut)) + geom_point()
# summarize (summarise)
diamonds %>% summarize(max_price = max(price)) # Equivalent SQL:select max(price) as max_price from diamonds;
diamonds %>% summarize(mean = mean(x), sum = sum(x,y,z), n = n()) # Equivalent SQL:select avg(x) as avg, sum(x)+sum(y)+sum(z) as sum, count(*) as n from diamonds;
# Useful Summary functions:
# min(), max() Minimum and maximum values
# mean() Mean value
# median() Median value
# sum() Sum of values
# var, sd() Variance and standard deviation of a vector
# first() First value in a vector
# nth() Nth value in a vector
# last() Last value in a vector
# n() The number of values in a vector
# n_distinct() The number of distinct values in a vector
# group_by
d <- diamonds %>% group_by(cut,color) %>% summarise(n = n()) %>% arrange(n) %>% tbl_df # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
diamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n())
diamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% ungroup %>% summarize(sum(n))
diamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% arrange(n)
diamonds %>% group_by(cut,color) %>% summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% arrange(desc(n), cut, color)
diamonds %>% group_by(cut, color, clarity) %>% summarise(mean_carat = mean(carat)) %>% ggplot(aes(x=cut, y=mean_carat, color=color)) + geom_point() + facet_wrap(~clarity)
# reshaping - see 00 Overview/Overview.R
require(tidyr)
diamonds$ID<-seq.int(nrow(diamonds))
head(diamonds)
head(diamonds) %>% select(ID, cut, color) %>% gather(variable, value, -ID) %>% tbl_df
# head(diamonds) %>% select(ID, cut, color) %>% gather(variable, value, -ID) %>% gather(variable, value) %>% spread(variable, value) %>% tbl_df
require("jsonlite")
require(dplyr)
dept <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from dept"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dept <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from dept"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_shs855', PASS='orcl_shs855', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dept
dplyr::inner_join(emp, dept, by="DEPTNO") %>% View
dplyr::inner_join(emp, dept, by="DEPTNO") %>% tbl_df
dplyr::inner_join(emp, dept, by="DEPTNO") %>% tbl_df
dplyr::inner_join(emp, dept, by="DEPTNO") %>% tbl_df
dplyr::inner_join(emp, dept, by="DEPTNO") %>% tbl_df
dept <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from dept"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_shs855', PASS='orcl_shs855', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
emp <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from emp"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
emp
dept <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from dept"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_shs855', PASS='orcl_shs855', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dept
dplyr::inner_join(emp, dept, by="DEPTNO") %>% tbl_df
View(dept)
View(emp)
dplyr::inner_join(emp, dept, by="DEPTNO") %>% tbl_df
dplyr::intersect(dept, oneDept) %>% tbl_df
require("jsonlite")
require(dplyr)
emp <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from emp"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
emp
dept <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from dept"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_shs855', PASS='orcl_shs855', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
dept
dplyr::inner_join(emp, dept, by="DEPTNO") %>% tbl_df
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
"select *
from emp e join dept d
on e.deptno = d.deptno"
')),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE))); tbl_df(df)
dplyr::left_join(emp, dept, by="DEPTNO") %>% tbl_df
dplyr::right_join(emp, dept, by="DEPTNO") %>% tbl_df
dplyr::full_join(emp, dept, by="DEPTNO") %>% tbl_df
oneDept <- dept %>% filter(DEPTNO == 10)
dplyr::semi_join(emp, oneDept, by="DEPTNO") %>% tbl_df
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ", '129.152.144.84:5001/rest/native/?query=
require(tidyr)
require(dplyr)
require(ggplot2)
setwd("~/DV_RProject2/01 Data")
file_path <- "NewYork.csv"
#df <- rename(NewYork, tbl = table)
df <- read.csv(file_path)
tbl_df(df)
#View(df)
#group by : data wrangling output
df %>% group_by(Sex,Percent_) %>% summarise(mean = mean(Percent_)) %>% tbl_df
#plot
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
# mutate : plot and data wrangling output
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% ggplot(aes(x=Percent, y=Year_)) + geom_point(aes(color=Ethnicity))
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% select (Percent, Year_) %>% tbl_df
# filter : data wrangling output
df %>% select(Year_, Sex) %>% filter(Year_ < 2009) %>% tbl_df
#plot for third data wrangling
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NewYork where YEAR_ <2009"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
#plot for third data wrangling
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NewYork where YEAR_ <2009"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
#plot for third data wrangling
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NewYork where YEAR_ <2009"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NewYork where YEAR_ <2009"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
head(df)
setwd("~/DV_RProject2")
require(tidyr)
require(dplyr)
require(ggplot2)
setwd("~/Desktop/Data Visualization/DV_RProject2/01 Data")
file_path <- "NewYork.csv"
setwd("~/DV_RProject2/01 Data")
file_path <- "NewYork.csv"
#df <- rename(NewYork, tbl = table)
df <- read.csv(file_path)
tbl_df(df)
#View(df)
#group by : data wrangling output
df %>% group_by(Sex,Percent_) %>% summarise(mean = mean(Percent_)) %>% tbl_df
#plot
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
df %>% raname(Percent_ = Percent_)
df %>% rename(Percent_ = Percent_)
#group by : data wrangling output
df %>% group_by(Sex,Percent_) %>% summarise(mean = mean(Percent_)) %>% tbl_df
#plot
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Sex, Percent, Ethnicity) %>% summarise (mean=mean(Percent)) %>% ggplot(aes(x=Sex, y=Percent)) + geom_point(aes(color=Ethnicity))
df %>% group_by(Sex,Percent_) %>% summarise(mean = mean(Percent_)) %>% tbl_df
#plot
#plot
#plot
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
# mutate : plot and data wrangling output
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% ggplot(aes(x=Percent, y=Year_)) + geom_point(aes(color=Ethnicity))
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% select (Percent, Year_) %>% tbl_df
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% ggplot(aes(x=Percent, y=Year_)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
# mutate : plot and data wrangling output
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% ggplot(aes(x=Percent, y=Year_)) + geom_point(aes(color=Ethnicity))
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% select (Percent, Year_) %>% tbl_df
# filter : data wrangling output
df %>% select(Year_, Sex) %>% filter(Year_ < 2009) %>% tbl_df
#plot for third data wrangling
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NewYork where YEAR_ <2009"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NewYork where YEAR_ <2009"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from NewYork where YEAR_ <2009"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pn4322', PASS='orcl_pn4322', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
require(extrafont)
ggplot() +
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_discrete() +
#facet_wrap(~ETHNICITY) +
#facet_grid(.~ETHNICITY, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(ETHNICITY~YEAR_, labeller=label_both) +
labs(title='NewYork') +
labs(x="Year", y=paste("Sex")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(YEAR_)), y=(as.character(SEX)), color=ETHNICITY),
stat="identity",
stat_params=list(),
geom="jitter",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.7, height=0.7)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_discrete() +
#facet_wrap(~ETHNICITY) +
#facet_grid(.~ETHNICITY, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(ETHNICITY~YEAR_, labeller=label_both) +
labs(title='NewYork') +
labs(x="Year", y=paste("Sex")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(YEAR_)), y=(as.character(SEX)), color=ETHNICITY),
stat="identity",
stat_params=list(),
geom="jitter",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.7, height=0.7)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_discrete() +
#facet_wrap(~ETHNICITY) +
#facet_grid(.~ETHNICITY, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(ETHNICITY~YEAR_, labeller=label_both) +
labs(title='NewYork') +
labs(x="Year", y=paste("Sex")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(Year_)), y=(as.character(SEX)), color=ETHNICITY),
stat="identity",
stat_params=list(),
geom="jitter",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.7, height=0.7)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_discrete() +
#facet_wrap(~ETHNICITY) +
#facet_grid(.~ETHNICITY, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(ETHNICITY~YEAR_, labeller=label_both) +
labs(title='NewYork') +
labs(x="Year", y=paste("Sex")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(Year_)), y=(as.character(Sex)), color=ETHNICITY),
stat="identity",
stat_params=list(),
geom="jitter",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.7, height=0.7)
)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_discrete() +
#facet_wrap(~ETHNICITY) +
#facet_grid(.~ETHNICITY, labeller=label_both) + # Same as facet_wrap but with a label.
#facet_grid(ETHNICITY~YEAR_, labeller=label_both) +
labs(title='NewYork') +
labs(x="Year", y=paste("Sex")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(Year_)), y=(as.character(Sex)), color=Ethnicity),
stat="identity",
stat_params=list(),
geom="jitter",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.7, height=0.7)
)
df %>% group_by(Sex,Percent_) %>% summarise(mean = mean(Percent_)) %>% tbl_df
#plot
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Cause))
df %>% group_by (Sex, Percent_, Cause) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Cause))
df %>% group_by (Sex, Count, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Count)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Sex, Count, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Count)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Cause, Count_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Cause, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
df %>% filter(year == 2011) %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
df %>% filter(Year_ == 2011) %>% group_by (Sex, Percent_, Ethnicity) %>% summarise (mean=mean(Percent_)) %>% ggplot(aes(x=Sex, y=Percent_)) + geom_point(aes(color=Ethnicity))
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Count_)) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
require(tidyr)
require(dplyr)
require(ggplot2)
require(extrafont)
setwd("~/Desktop/Data Visualization/DV_RProject2/01 Data")
file_path <- "NewYork.csv"
#df <- rename(NewYork, tbl = table)
df <- read.csv(file_path)
tbl_df(df)
#View(df)
#group by : data wrangling output
df %>% group_by(Sex,Percent_) %>% summarise(mean = mean(Percent_)) %>% tbl_df
#plot
#Plots sex by count/number of deaths for each ehtnicity.
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Count_)) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df <- read.csv(file_path)
tbl_df(df)
#View(df)
#group by : data wrangling output
#plot
#Plots sex by count/number of deaths for each ehtnicity.
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Count_)) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
tbl_df(df)
#View(df)
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% ggplot(aes(x=Percent, y=Year_)) + geom_point(aes(color=Ethnicity))
df %>% mutate(Percent= cume_dist(Percent_)) %>% filter (!is.na(Percent_), !is.na(Year_), Percent<= .20 | Percent >= .80) %>% select (Percent, Year_) %>% tbl_df
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Count_)) %>%tbl_df
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Count_)) %>% View(df)
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Count_)) %>% View(tbl)
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% summarise (mean=mean(Count_)) %>% View
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% View
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% View
#Sex by count/number of deaths for each ethnicity in the year 2011.  Each dot represents a different cause of death.
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% View
#Plots sex by count/number of deaths for each ethnicity in the year 2011.  Each dot represents a different cause of death.
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% filter(Year_ == 2010) %>% group_by (Ethnicity, Count_) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% filter(Year_ == 2010) %>% group_by (Ethnicity, Count_) %>% ggplot(aes(x=Ethnicity, y=Count_)) + geom_point()
bottom20_diamonds <- diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20) %>% arrange(desc(price_percent)) %>% tbl_df
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(percent_)) %>% filter(percent_deaths <= .2) %>% arrange(desc(percent_deaths)) %>% ggplot(aes(x = Sex, y = percent_deaths)) + geom_point(color = Ethnicity)
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths <= .2) %>% arrange(desc(percent_deaths)) %>% ggplot(aes(x = Sex, y = percent_deaths)) + geom_point(color = Ethnicity)
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths <= .2) %>% arrange(desc(percent_deaths)) %>% ggplot(aes(x = Sex, y = percent_deaths)) + geom_point(aes(color = Ethnicity))
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths <= .2) %>% ggplot(aes(x = Sex, y = percent_deaths)) + geom_point(aes(color = Ethnicity))
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths >= .2) %>% ggplot(aes(x = Sex, y = percent_deaths)) + geom_point(aes(color = Ethnicity))
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths <= .5) %>% ggplot(aes(x = Sex, y = percent_deaths)) + geom_point(aes(color = Ethnicity))
bottom20_diamonds <- diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20) %>% arrange(desc(price_percent)) %>% View
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths <= .5) %>% ggplot(aes(x = Sex, y = Cumulative_Percent_Deaths)) + geom_point(aes(color = Ethnicity))
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths <= .5) %>% View
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% filter(percent_deaths <= .5) %>% arrange(desc(percent_deaths)) %>% View
df %>% group_by (Percent_, Sex, Ethnicity) %>% View
df %>% group_by (Percent_, Sex, Ethnicity) %>% mutate(percent_deaths = cume_dist(Percent_)) %>% View
df %>% group_by (Percent_, Sex, Ethnicity) %>% filter(Percent_ < 0.2) %>% View
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 0.8) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 80) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 0.8) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color =))
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 0.8) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 80) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 60) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 60) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Sex, Cause) %>% filter(Percent_ >= 40) %>% ggplot(aes(x = Sex, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Ethnicity, Cause) %>% filter(Cause = "Diseases of Heart") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Ethnicity, Cause) %>% filter(Cause = "Diseases of Heart") %>% View
df %>% group_by (Percent_, Ethnicity, Cause) %>% filter(Cause = "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Ethnicity, Cause) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Cause))
df %>% group_by (Percent_, Ethnicity, Cause) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year))
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year))
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% filter(Sex == "Male") %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% filter(Sex == "Male") %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% filter(Sex == "MALE") %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by (Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE")  %>% filter(Year == 2011) %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by (Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE")  %>% filter(Year_ == 2011) %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by(Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE")  %>% filter(Year_ == 2011) %>% View
ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% filter(Year_ == 2011) %>% select(Year_, Sex, Count_, Ethnicity) %>% group_by (Sex, Count_, Ethnicity) %>% View
df %>% select (Percent_, Ethnicity, Cause, Year_) %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% select (Percent_, Ethnicity, Cause, Year_, Sex) %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% select (Percent_, Ethnicity, Cause, Year_, Sex) %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% select (Percent_, Ethnicity, Cause, Year_, Sex) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% select (Percent_, Ethnicity, Cause, Year_, Sex) %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% filter(Year_ == 2011) %>% select(Year_, Sex, Count_, Ethnicity) %>% group_by (Sex, Count_, Ethnicity) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% filter(Year_ == 2011) %>% group_by (Sex, Count_, Ethnicity) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by(Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE")  %>% filter(Year_ == 2011) %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>%  ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% View
df %>% filter(Sex == "MALE") %>% group_by (Percent_, Ethnicity, Cause,Year_)  %>% filter(Cause == "DISEASES OF HEART") %>% View
df %>% group_by (Percent_, Ethnicity, Cause,Year_) %>% filter(Sex == "MALE")  %>% filter(Cause == "DISEASES OF HEART") %>% ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by(Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE")  %>% filter(Year_ == 2011) %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>%  ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% group_by(Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE")  %>% filter(Year_ == 2011) %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>%  ggplot(aes(x = Ethnicity, y = Percent_))
df %>% group_by(Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE")  %>% filter(Year_ == 2011) %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>%  ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point()
df %>% group_by(Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE") %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>%  ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Year_))
df %>% filter(Year_ == 2011) %>% select(Year_, Sex, Count_, Ethnicity) %>% group_by (Sex, Count_, Ethnicity) %>% ggplot(aes(x=Sex, y=Count_)) + geom_point(aes(color=Ethnicity))
df %>% group_by(Percent_, Ethnicity, Cause,Year_,Sex) %>% filter(Sex == "MALE") %>% filter(Ethnicity == "ASIAN & PACIFIC ISLANDER") %>%  ggplot(aes(x = Ethnicity, y = Percent_)) + geom_point(aes(color = Cause))
setwd("~/DV_RProject2/01 Data")
file_path <- "NewYork.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Customer_ID", "Order_ID", "Postal_Code", "Row_ID", "Discount", "Gross_Profit_Ratio" , "Number_of_Records", "Order_Quantity", "Product_Base_Margin", "Profit", "Sales", "Shipping_Cost", "Unit_Price")
require(tidyr)
require(dplyr)
require(ggplot2)
file_path <- "NewYork.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Count_", "Percent_")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
#df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
#df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require(tidyr)
require(dplyr)
require(ggplot2)
file_path <- "NewYork.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
# str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Count_", "Percent_")
#measures <- NA # Do this if there are no measures.
# Get rid of special characters in each column.
# Google ASCII Table to understand the following:
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
#df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
#df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
# The following is an example of dealing with special cases like making state abbreviations be all upper case.
# df["State"] <- data.frame(lapply(df["State"], toupper))
# Get rid of all characters in measures except for numbers, the - sign, and period.dimensions
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
setwd("~/DV_RProject2")
getwd
getwd()
setwd("~/")
getwd()
setwd("~/DV_RProject2/02DataWrangling")
